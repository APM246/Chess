#BlueJ class context
comment0.target=Piece
comment0.text=\r\n\ Parent\ class\ for\ all\ chess\ pieces.\ Provides\ position\ of\ chess\ piece\ and\ whether\r\n\ it\ is\ on\ black\ or\ white\ team.\r\n\ Also\ defines\ all\ actions\ a\ chess\ piece\ can\ perform,\ i.e\ its\ moving\ action\ and\ potentially\r\n\ \ *\ its\ ability\ to\ be\ promoted\ (only\ for\ pawns).\r\n\ When\ method\ in\ Board\ is\ called,\ don't\ need\ to\ specify\ which\ particular\ Piece,\ thus\ use\ this\ abstract\ class\r\n\ Abstract\ class\ is\ like\ an\ interface\ but\ can\ provide\ implementations\ of\ some\ methods\r\n
comment1.params=position\ isWhite
comment1.target=Piece(int[],\ boolean)
comment2.params=x\ y
comment2.target=void\ setPosition(int,\ int)
comment3.params=x\ y
comment3.target=boolean\ legalMove(int,\ int)
comment4.params=
comment4.target=void\ promote()
comment4.text=checks\ if\ selected\ square\ would\ be\ a\r\nlegal\ move\ for\ the\ current\ piece
comment5.params=
comment5.target=java.lang.String\ getName()
comment6.params=
comment6.target=int[]\ getPosition()
comment7.params=
comment7.target=boolean\ getTeam()
numComments=8
